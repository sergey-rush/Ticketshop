<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:TicketShop.Shell.Converters"
                    xmlns:models="clr-namespace:TicketShop.Shell.Models">
   
    <!-- UI commands. -->
    <RoutedUICommand x:Key="Commands.ZoomOut" />
    <RoutedUICommand x:Key="Commands.ZoomIn" />
    <RoutedUICommand x:Key="Commands.JumpBackToPrevZoom" />
    <RoutedUICommand x:Key="Commands.Fill" />
    <RoutedUICommand x:Key="Commands.OneHundredPercent" />
    <converters:ScaleToPercentConverter x:Key="ScaleToPercentConverter" />
    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
    <converters:ResultToInfoConverter x:Key="ResultToInfoConverter"/>
    <converters:StatusToInfoConverter x:Key="StatusToInfoConverter"/>
    <converters:DateTimeFormatConverter x:Key="DateTimeFormatConverter"/>
    <converters:VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter"/>
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <x:Array x:Key="BlankStatusList" Type="models:ComboBoxKey">
        <models:ComboBoxKey Name = "В продаже" Value ="1"/>
        <models:ComboBoxKey Name = "Распечатан" Value ="11"/>
        <models:ComboBoxKey Name = "Аннулирован" Value ="7"/>
    </x:Array>

    <!-- Override the style of the ListBox to remove the ScrollViewer. -->
    <Style x:Key="NoScrollViewerListBoxStyle" TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Canvas Background="{TemplateBinding Background}" IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Override the style of each ListBoxItem to bind Canvas.Left, Canvas.Top and IsSelected. -->
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Canvas.Left" Value="{Binding X}" />
        <Setter Property="Canvas.Top" Value="{Binding Y}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" BorderThickness="1" Padding="2">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Control.FontWeight" Value="Bold" />-->
                            <!--<Setter Property="Control.BorderThickness" Value="3" />-->
                            <!--<Setter Property="Control.BorderBrush" Value="White" />-->
                            <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
                            <!--<Setter Property="ToolTip" Value="{Binding SideName}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Ellipse x:Key="AppThemeMenuIcon" x:Shared="False" Width="16" Height="16" StrokeThickness="1" Stroke="{Binding BorderColorBrush, Mode=OneWay}" Fill="{Binding ColorBrush, Mode=OneWay}" />
    <Ellipse x:Key="AccentMenuIcon" x:Shared="False" Width="16" Height="16" Fill="{Binding ColorBrush, Mode=OneWay}" />
    <Style x:Key="AppThemeMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
        <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
        <Setter Property="Icon" Value="{StaticResource AppThemeMenuIcon}" />
        <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
    </Style>
    <Style x:Key="AccentColorMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
        <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
        <Setter Property="Icon" Value="{StaticResource AccentMenuIcon}" />
        <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
    </Style>
</ResourceDictionary>